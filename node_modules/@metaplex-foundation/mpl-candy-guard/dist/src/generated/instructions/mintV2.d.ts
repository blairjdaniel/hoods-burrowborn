import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
export declare type MintV2InstructionArgs = {
    mintArgs: Uint8Array;
    label: beet.COption<string>;
};
export declare const mintV2Struct: beet.FixableBeetArgsStruct<MintV2InstructionArgs & {
    instructionDiscriminator: number[];
}>;
export declare type MintV2InstructionAccounts = {
    candyGuard: web3.PublicKey;
    candyMachineProgram: web3.PublicKey;
    candyMachine: web3.PublicKey;
    candyMachineAuthorityPda: web3.PublicKey;
    payer: web3.PublicKey;
    minter: web3.PublicKey;
    nftMint: web3.PublicKey;
    nftMintAuthority: web3.PublicKey;
    nftMetadata: web3.PublicKey;
    nftMasterEdition: web3.PublicKey;
    token?: web3.PublicKey;
    tokenRecord?: web3.PublicKey;
    collectionDelegateRecord: web3.PublicKey;
    collectionMint: web3.PublicKey;
    collectionMetadata: web3.PublicKey;
    collectionMasterEdition: web3.PublicKey;
    collectionUpdateAuthority: web3.PublicKey;
    tokenMetadataProgram: web3.PublicKey;
    splTokenProgram: web3.PublicKey;
    splAtaProgram?: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    sysvarInstructions: web3.PublicKey;
    recentSlothashes: web3.PublicKey;
    authorizationRulesProgram?: web3.PublicKey;
    authorizationRules?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const mintV2InstructionDiscriminator: number[];
export declare function createMintV2Instruction(accounts: MintV2InstructionAccounts, args: MintV2InstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
